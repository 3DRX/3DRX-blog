---
import { Image } from "astro:assets";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import type { ImageMetadata } from "astro";

const imgPathPattern = "/src/assets/**/*.{jpeg,jpg,png,gif,svg}";
const images = import.meta.glob<{ default: ImageMetadata }>(imgPathPattern);
const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
let heroImageSrc;
if (heroImage) {
  if (heroImage.startsWith("http")) {
    heroImageSrc = heroImage;
  } else {
    if (!images[heroImage]) {
      throw new Error(
        `"${heroImage}" does not exist in glob: "${imgPathPattern}"`,
      );
    } else {
      heroImageSrc = images[heroImage]();
    }
  }
}
console.log(heroImageSrc);
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <script src="../LoadGiscus.ts"></script>
    <link
      href="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css"
      rel="stylesheet"
    />
  </head>
  <body>
    <Header />
    <main>
      <article>
        {
          heroImage && (
            <Image
              class="mx-auto w-4/5"
              src={heroImageSrc}
              alt=""
              loading="eager"
            />
          )
        }
        <h1 class="mt-3 text-3xl">{title}</h1>
        <p>{description}</p>
        <div class="my-1 flex text-[color:var(--secondary-color)]">
          <FormattedDate date={pubDate} />
          <div class="grow"></div>
          {
            updatedDate && (
              <div class="last-updated-on italic">
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }
        </div>
        <hr class="mb-3 mt-1" />
        <div
          class="prose-pre:code:bg-transparent prose max-w-full text-[color:var(--color)] prose-headings:text-[color:var(--color)] prose-h1:text-xl prose-h1:font-bold prose-p:text-justify prose-a:text-[color:var(--link-color)] prose-blockquote:border prose-blockquote:border-[color:var(--secondary-color)] prose-blockquote:px-5 prose-blockquote:text-[color:var(--color)] prose-strong:text-[color:var(--color)] prose-code:text-white prose-ul:mt-0 prose-li:my-0 prose-img:mx-auto prose-img:rounded-xl"
        >
          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
